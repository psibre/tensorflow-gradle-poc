plugins {
    id "com.jetbrains.python.envs" version "0.0.25"
    id 'application'
}

mainClassName = 'PredictExampleTF'

ext {
    pyBootstrapDir = file("$buildDir/bootstrap")
    pyEnvName = 'conda'
    pythonVersion = '3.5.3'
    tensorFlowVersion = '1.5.0'
}

repositories {
    jcenter()
}

dependencies {
    compile group: 'org.tensorflow', name: 'tensorflow', version: tensorFlowVersion
}

if (hasProperty('gpu')) {
    configurations.all {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('org.tensorflow:libtensorflow_jni') with module("org.tensorflow:libtensorflow_jni_gpu:$tensorFlowVersion")
            }
        }
    }
}

envs {
    bootstrapDirectory = pyBootstrapDir
    conda pyEnvName, ["tensorflow==$tensorFlowVersion"]
}

task trainModel(type: TrainModel) {
    srcDir = file('python_part')
    destDir = layout.buildDirectory.dir('data')
    afterEvaluate {
        dependsOn build_envs
    }
}

run {
    dependsOn trainModel
    workingDir buildDir
}

class TrainModel extends DefaultTask {

    @InputDirectory
    final DirectoryProperty srcDir = newInputDirectory()

    @OutputDirectory
    final DirectoryProperty destDir = newOutputDirectory()

    @TaskAction
    void train() {
        project.copy {
            from srcDir
            into temporaryDir
        }
        project.exec {
            commandLine project.file("$project.pyBootstrapDir/$project.pyEnvName/bin/python"), 'train.py'
            workingDir temporaryDir
        }
        project.copy {
            from "$temporaryDir/data"
            from "$project.rootDir/data"
            into destDir
        }
    }
}
